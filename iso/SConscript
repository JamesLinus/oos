# vim: syntax=python

Import('env', 'arch', 'buildtype', 'distreq')

distreq += ["menu.lst"]

import os

def get_stage2_eltorito(target, source, env):
  if not os.path.exists('iso/stage2_eltorito'):
    print "stage2_eltorito is missing, trying to copy it from /boot/grub/stage2_eltorito"
    if os.path.exists('/boot/grub/stage2_eltorito'):
      Execute(Copy('iso/stage2_eltorito', '/boot/grub/stage2_eltorito'))
    else:
      print 'stage2_eltorito could not be found. Please find it and copy it to iso/stage2_eltorito'
      exit(1)
  else:
    print "stage2_eltorito found"

require_stage2_eltorito = Action(get_stage2_eltorito, cmdstr = 'Checking for iso/stage2_eltorito...')

iso = env.Command("oos.iso", distreq,
  [
    require_stage2_eltorito,
    Delete('iso/fs/boot/grub'),
    Mkdir('iso/fs/boot/grub'),
    Copy('iso/fs/boot/grub', 'iso/stage2_eltorito'),
    Copy('iso/fs/boot/grub', 'iso/menu.lst'),
    Copy('iso/fs/boot', 'src/shiny/shiny.exe'),
    'genisoimage -R -b boot/grub/stage2_eltorito -no-emul-boot -boot-load-size 4 -boot-info-table -input-charset utf-8 -o $TARGET iso/fs'
  ])

Clean(iso, 'fs')
NoClean('iso/stage2_eltorito')

